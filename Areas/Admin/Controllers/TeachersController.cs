using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using TinhocOnline.Models;

namespace TinhocOnline.Areas.Admin.Controllers
{
    [Area("Admin")]
    [Route("Admin/[controller]/[action]")]
    public class TeachersController : Controller
    {
        private readonly DataContext _context;

        public TeachersController(DataContext context)
        {
            _context = context;
        }

        public IActionResult Index()
        {
            // L·ªçc ch·ªâ nh·ªØng ng∆∞·ªùi c√≥ Role = 'Teacher'
            var teachers = _context.tblUsers
                .Where(u => u.Role == "Teacher")
                .ToList();

            return View(teachers);
        }

        // GET: X√°c nh·∫≠n x√≥a
        public IActionResult Delete(int? id)
        {
            if (id == null || id == 0)
                return NotFound();

            // üîπ T√¨m gi√°o vi√™n theo UserID (v√¨ b·∫°n truy·ªÅn t·ª´ danh s√°ch Users)
            var teacher = _context.tblTeachers
                .Include(t => t.User)
                .FirstOrDefault(t => t.UserID == id);

            if (teacher == null)
                return NotFound();

            return View(teacher);
        }

        // POST: Th·ª±c hi·ªán x√≥a
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public IActionResult DeleteConfirmed(int id)
        {
            // üîπ 1. L·∫•y gi√°o vi√™n theo UserID
            var teacher = _context.tblTeachers.FirstOrDefault(t => t.UserID == id);

            if (teacher != null)
            {
                // 2Ô∏è‚É£ X√≥a gi√°o vi√™n tr∆∞·ªõc
                _context.tblTeachers.Remove(teacher);
                _context.SaveChanges();  // ‚ö†Ô∏è L∆∞u ngay ƒë·ªÉ tr√°nh l·ªói FK
            }

            // 3Ô∏è‚É£ Sau ƒë√≥ x√≥a user
            var user = _context.tblUsers.FirstOrDefault(u => u.UserID == id);
            if (user != null)
            {
                _context.tblUsers.Remove(user);
                _context.SaveChanges();  // X√≥a cha sau
            }

            return RedirectToAction("Index");
        }
        // GET: Admin/Teachers/Edit/5
[HttpGet]
public IActionResult Edit(int? id)
{
    if (id == null || id == 0)
        return NotFound();

    var teacher = _context.tblTeachers
        .Include(t => t.User)
        .FirstOrDefault(t => t.UserID == id);

    if (teacher == null)
        return NotFound();

    // Tr·∫£ v·ªÅ View v·ªõi model l√† ki·ªÉu Users (View y√™u c·∫ßu)
    return View(teacher.User);
}


  [HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Edit(Users user)
{
    if (!ModelState.IsValid)
        return View(user); // Tr·∫£ l·∫°i view v·ªõi th√¥ng b√°o l·ªói n·∫øu c√≥

    // L·∫•y user hi·ªán c√≥ trong database
    var existingUser = _context.tblUsers.FirstOrDefault(u => u.UserID == user.UserID);
            if (existingUser == null)
                return NotFound();

            // C·∫≠p nh·∫≠t c√°c thu·ªôc t√≠nh
            existingUser.UserName = user.UserName;
    existingUser.FullName = user.FullName;
    existingUser.Email = user.Email;
    existingUser.Role = user.Role;
    existingUser.IsActive = user.IsActive;

    _context.tblUsers.Update(existingUser);
    _context.SaveChanges();

    return RedirectToAction("Index");
}

    }
}